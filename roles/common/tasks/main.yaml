- name: Install APT packages
  apt:
    name: "{{ apt_packages }}"
    state: present
    update_cache: yes

- name: Install Cinnamon desktop environment
  apt:
    name:
      - task-cinnamon-desktop
    state: present

- name: Install Flatpak packages
  flatpak:
    name: "{{ item }}"
    state: present
    remote: flathub
  loop: "{{ flatpak_packages }}"

# - name: Copy dotfiles
#   copy:
#     src: "{{ item.src }}"
#     dest: "{{ item.dest }}"
#     mode: '0644'
#   loop:
#     - { src: "my-dotfiles/.bashrc", dest: "/home/{{ ansible_user_id }}/.bashrc" }
#     - { src: "my-dotfiles/.vimrc", dest: "/home/{{ ansible_user_id }}/.vimrc" }
#   become: false

# - name: Ensure Zsh is installed
#   apt:
#     name: zsh
#     state: present

# - name: Install Oh My Zsh
#   become: false
#   shell: |
#     sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" "" --unattended
#   args:
#     executable: /bin/bash
#   when: ansible_user_id != 'root'

# - name: Change default shell to zsh
#   user:
#     name: "{{ ansible_user_id }}"
#     shell: /usr/bin/zsh

- name: Install Google Chrome
  apt:
    deb: https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb

- name: Add Microsoft GPG key
  apt_key:
    url: https://packages.microsoft.com/keys/microsoft.asc
    state: present

- name: Add VSCode repo
  apt_repository:
    repo: deb [arch=amd64] https://packages.microsoft.com/repos/vscode stable main
    state: present
    filename: vscode

- name: Install VSCode
  apt:
    name: code
    state: present
    update_cache: yes

- name: Ensure Steam is installed
  apt:
    name: steam
    state: present

- name: Ensure dependencies for pyenv and pipx are installed
  apt:
    name:
      - python3-pip
      - python3-venv
      - pipx
      - gcc
      - make
      - zlib1g-dev
      - libssl-dev
      - libbz2-dev
      - libreadline-dev
      - libsqlite3-dev
      - curl
      - llvm
      - libncursesw5-dev
      - xz-utils
      - tk-dev
      - libxml2-dev
      - libxmlsec1-dev
      - libffi-dev
      - liblzma-dev
    state: present
    update_cache: yes

- name: Ensure pipx is installed and on PATH
  shell: |
    python3 -m pip install --user pipx
    python3 -m pipx ensurepath
  args:
    executable: /bin/bash
  become: false
  environment:
    PATH: "{{ ansible_env.HOME }}/.local/bin:{{ ansible_env.PATH }}"

- name: Clone pyenv repo
  git:
    repo: https://github.com/pyenv/pyenv.git
    dest: "{{ ansible_env.HOME }}/.pyenv"
  become: false

- name: Set pyenv environment in .bashrc
  lineinfile:
    path: "/home/{{ ansible_user_id }}/.bashrc"
    line: 'export PYENV_ROOT="$HOME/.pyenv" && export PATH="$PYENV_ROOT/bin:$PATH" && eval "$(pyenv init --path)"'
    insertafter: EOF
  become: false

- name: Ensure my personal user exists
  user:
    name: "{{ personal_user }}"
    groups: sudo
    shell: /bin/bash
    create_home: yes
    state: present

- name: Set authorized SSH key for my user (optional)
  authorized_key:
    user: "{{ personal_user }}"
    key: "{{ lookup('file', 'files/ssh_keys/{{ personal_user }}.pub') }}"
    state: present
  when: ssh_key_enabled | default(true)

- name: Install Rust using rustup
  become: false
  shell: |
    curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
  args:
    executable: /bin/bash
  environment:
    CARGO_HOME: "{{ ansible_env.HOME }}/.cargo"
    RUSTUP_HOME: "{{ ansible_env.HOME }}/.rustup"
    PATH: "{{ ansible_env.HOME }}/.cargo/bin:{{ ansible_env.PATH }}"
  when: install_rust

- name: Add Rust to PATH in .bashrc
  lineinfile:
    path: "/home/{{ ansible_user_id }}/.bashrc"
    line: 'export PATH="$HOME/.cargo/bin:$PATH"'
    insertafter: EOF
  become: false
  when: install_rust
